services:
  mongo-container:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - recipe-app-network

  init-backend:
    image: node:20-alpine
    user: "0:0"
    command: >
      sh -c "
      mkdir -p /app/uploads &&
      chown -R 1000:1000 /app/uploads &&
      chmod 755 /app/uploads &&
      chmod -R 644 /app/uploads/* &&
      echo 'Volume permissions set (node:node, dir 755, files 644)' &&
      ls -la /app/uploads
      "
    volumes:
      - uploads:/app/uploads
    depends_on:
      - mongo-container
    networks:
      - recipe-app-network

  backend-container:
    build: ./backend
    ports:
      - "0.0.0.0:8080:8080"  # Changed from 5000 to 8080
    depends_on:
      init-backend:
        condition: service_completed_successfully
      mongo-container:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo-container:27017/recipeDB
      - PORT=8080
      - NODE_ENV=development
      - JWT_SECRET=${JWT_SECRET:-test-jwt-secret-for-development-only-not-for-production}
      - FRONTEND_URL=http://localhost:3000
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - uploads:/app/uploads
    networks:
      - recipe-app-network

  frontend-container:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://192.168.68.129:8080
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      - REACT_APP_API_URL=http://192.168.68.129:8080
    depends_on:
      - backend-container
    networks:
      - recipe-app-network

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - recipe-app-network
    depends_on:
      - backend-container

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - recipe-app-network
    depends_on:
      - prometheus
networks:
  recipe-app-network:
    driver: bridge
volumes:
  mongo-data:
  uploads:
  prometheus-data:
  grafana-data: