name: dev

services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - recipe-app-network
    environment:
      - MONGO_INITDB_DATABASE=recipeDB

  init-backend:
    image: node:20-alpine
    user: "0:0"
    command: >
      sh -c "
      mkdir -p /app/uploads &&
      chown -R 1000:1000 /app/uploads &&
      chmod 755 /app/uploads &&
      echo 'Volume permissions set (node:node, dir 755)' &&
      ls -la /app/uploads
      "
    volumes:
      - uploads:/app/uploads
    networks:
      - recipe-app-network

  backend:
    build:
      context: ../../..
      dockerfile: deployment/docker/development/backend.Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - uploads:/app/uploads
    networks:
      - recipe-app-network
    depends_on:
      mongo:
        condition: service_healthy
      init-backend:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://mongo:27017/recipeDB
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000
      - MAX_FILE_SIZE=10485760
      - UPLOAD_DIR=/app/uploads
      - BROWSER=none
      - FAST_REFRESH=false
      - WDS_SOCKET_HOST=localhost

  frontend:
    build:
      context: ../../..
      dockerfile: deployment/docker/development/frontend.Dockerfile
      args:
        - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8080}
      - BROWSER=none
      - FAST_REFRESH=false
      - WDS_SOCKET_HOST=${WDS_SOCKET_HOST:-localhost}
    depends_on:
      - backend
    networks:
      - recipe-app-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../../../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - recipe-app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ../../../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ../../../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - recipe-app-network

networks:
  recipe-app-network:
    driver: bridge

volumes:
  mongo-data:
  uploads:
    external: true
    name: dev-uploads
  prometheus-data:
  grafana-data: